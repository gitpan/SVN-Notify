Index: lib/SVN/Notify.pm
===================================================================
--- lib/SVN/Notify.pm	(revision 2887)
+++ lib/SVN/Notify.pm	(working copy)
@@ -304,6 +304,20 @@
 which the commit took place. Specifying this parameter to a true value
 implicitly sets the C<with_diff> parameter to a true value.
 
+=item no_added_diff
+
+  svnnotify --no-added-diff
+
+A boolean value specifying whether or not to supress the diffs of added files.
+This option does nothing unless C<with_diff> or C<attach_diff> is specified.
+
+=item no_deleted_diff
+
+  svnnotify --no-deleted-diff
+
+A boolean value specifying whether or not to supress the diffs of deleted files.
+This option does nothing unless C<with_diff> or C<attach_diff> is specified.
+
 =item reply_to
 
   svnnotify --reply-to devlist@example.com
@@ -404,6 +418,36 @@
 as there may be additional parameters and existing parameters may behave
 differently.
 
+=item author_url
+
+  svnnotify --author-url 'http://svn.example.com/changelog/~author=%s/repos'
+  svnnotify --author-url 'mailto:%s@example.com'
+
+If a URL is specified for this parameter, then it will be used to create a
+link for the current author. The URL can have the "%s" format where the
+author's username should be put into the URL.
+
+=item revision_url
+
+  svnnotify --revision-url 'http://svn.example.com/changelog/?cs=%s'
+
+If a URL is specified for this parameter, then it will be used to create a
+link to the generic URL corresponding to the current revision number. The URL
+must have the "%s" format where the Subversion revision number will be
+inserted into the URL. Mutually exclusive with C<svnweb_url> and
+C<viewcvs_url>.
+
+=item revision_regex
+
+  svnnotify --revision-regex '\[?#\s*(\d+)\s*\]?'
+
+The regex to match a revision number for a custom revision system. This should
+return a single match to be interpolated into the C<revision_url> option. The
+example shown matches "[#1234]" or "#1234" or "[# 1234]". This regex should be
+as specific as possible, preferably wrapped in "\b" to match word boundaries.
+If you're using L<SVN::Notify::HTML|SVN::Notify::HTML>, be sure to read its
+documentation for different semantics for C<revision_regex>!
+
 =item svnweb_url
 
   svnnotify --svnweb-url 'http://svn.example.com/index.cgi/revision/?rev=%s'
@@ -412,7 +456,8 @@
 If a URL is specified for this parameter, then it will be used to create a
 link to the L<SVN::Web|SVN::Web> URL corresponding to the current revision
 number. The URL must have the "%s" format where the Subversion revision number
-should be put into the URL. Mutually exclusive with C<viewcvs_url>.
+should be put into the URL. Mutually exclusive with C<revision_url> and
+C<viewcvs_url>.
 
 =item viewcvs_url
 
@@ -422,7 +467,7 @@
 If a URL is specified for this parameter, then it will be used to create a
 link to the ViewCVS URL corresponding to the current revision number. The URL
 must have the "%s" format where the Subversion revision number should be put
-into the URL. Mutually exclusive with C<svnweb_url>.
+into the URL. Mutually exclusive with C<revision_url> and C<svnweb_url>.
 
 =item rt_url
 
@@ -482,7 +527,7 @@
 shown matches "[#1234]" or "#1234" or "[# 1234]". This regex should be as
 specific as possible, preferably wrapped in "\b" to match word boundaries. If
 you're using L<SVN::Notify::HTML|SVN::Notify::HTML>, be sure to read its
-documentation for a different syntax for C<ticket_regex>!
+documentation for different semantics for C<ticket_regex>!
 
 =item verbose
 
@@ -532,27 +577,34 @@
       unless $params{to} || $params{to_regex_map};
 
     # Set up default values.
-    $params{svnlook}        ||= $ENV{SVNLOOK}  || $class->find_exe('svnlook');
-    $params{with_diff}      ||= $params{attach_diff};
-    $params{verbose}        ||= 0;
-    $params{charset}        ||= 'UTF-8';
-    $params{io_layer}       ||= "encoding($params{charset})";
-    $params{smtp_authtype}  ||= 'PLAIN';
-    $params{sendmail}       ||= $ENV{SENDMAIL} || $class->find_exe('sendmail')
+    $params{svnlook}         ||= $ENV{SVNLOOK}  || $class->find_exe('svnlook');
+    $params{with_diff}       ||= $params{attach_diff};
+    $params{no_added_diff}   ||= 0;
+    $params{no_deleted_diff} ||= 0;
+    $params{verbose}         ||= 0;
+    $params{charset}         ||= 'UTF-8';
+    $params{io_layer}        ||= "encoding($params{charset})";
+    $params{smtp_authtype}   ||= 'PLAIN';
+    $params{sendmail}        ||= $ENV{SENDMAIL} || $class->find_exe('sendmail')
         unless $params{smtp};
 
     die qq{Cannot find sendmail and no "smtp" parameter specified}
         unless $params{sendmail} || $params{smtp};
 
-    # svnweb_url and viewcvs_url are mutually exlusive.
-    if ($params{svnweb_url} && $params{svnweb_url} !~ /%s/) {
-        warn "--svnweb-url must have '%s' format\n";
-        $params{svnweb_url} .= '/revision/?rev=%s&view=rev'
+    # revision_url, svnweb_url and viewcvs_url are mutually exlusive.
+    for my $spec (
+        [ revision_url => '%s'],
+        [ svnweb_url   => '/revision/?rev=%s&view=rev' ],
+        [ viewcvs_url  => '?rev=%s&view=rev' ],
+    ) {
+        next unless $params{ my $url_param = $spec->[0] };
+        if ($params{$url_param} !~ /%s/) {
+            (my $opt = $url_param) =~ s/_/-/g;
+            warn "--$opt must have '%s' format\n";
+            $params{$url_param} .= $spec->[1];
+        }
+        last;
     }
-    if ($params{viewcvs_url} && $params{viewcvs_url} !~ /%s/) {
-        warn "--viewcvs-url must have '%s' format\n";
-        $params{viewcvs_url} .= '?rev=%s&view=rev'
-    }
 
     # Make it so!
     $class->_dbpnt( "Instantiating $class object") if $params{verbose};
@@ -652,6 +704,8 @@
         'language|g=s'        => \$opts->{language},
         'with-diff|d'         => \$opts->{with_diff},
         'attach-diff|a'       => \$opts->{attach_diff},
+        'no-added-diff'       => \$opts->{no_added_diff},
+        'no-deleted-diff'     => \$opts->{no_deleted_diff},
         'reply-to|R=s'        => \$opts->{reply_to},
         'subject-prefix|P=s'  => \$opts->{subject_prefix},
         'subject-cx|C'        => \$opts->{subject_cx},
@@ -660,6 +714,9 @@
         'max-sub-length|i=i'  => \$opts->{max_sub_length},
         'max-diff-length|e=i' => \$opts->{max_diff_length},
         'handler|H=s'         => \$opts->{handler},
+        'author-url=s'        => \$opts->{author_url},
+        'revision-url=s'      => \$opts->{revision_url},
+        'revision-regex=s'    => \$opts->{revision_regex},
         'viewcvs-url|U=s'     => \$opts->{viewcvs_url},
         'svnweb-url|S=s'      => \$opts->{svnweb_url},
         'rt-url|T=s'          => \$opts->{rt_url},
@@ -1171,27 +1228,33 @@
   $notifier->output_metadata($file_handle);
 
 This method outputs the metadata of the commit, including the revision number,
-author (user), and date of the revision. If the C<viewcvs_url> or
-C<svnweb_url> attributes have been set, then the appropriate URL(s) for the
-revision will also be output.
+author (user), and date of the revision. If the C<revision_url>,
+C<viewcvs_url> or C<svnweb_url> attribute has been set, then the appropriate
+URL for the revision will also be output. Likewise, if the C<author_url>
+attribute has been set, then the appropriate URL for the author will also be
+output.
 
 =cut
 
 sub output_metadata {
     my ($self, $out) = @_;
-    print $out
-      "Revision: $self->{revision}\n",
-      "Author:   $self->{user}\n",
-      "Date:     $self->{date}\n";
 
-    # svnweb_url and viewcvs_url are mutually exlusive.
-    if ($self->{svnweb_url}) {
-        printf $out "SVNWeb:   $self->{svnweb_url}\n", $self->{revision};
-    } elsif ($self->{viewcvs_url}) {
-        printf $out "ViewCVS:  $self->{viewcvs_url}\n", $self->{revision};
+    # Output the revision number any any relevant URL.
+    print $out "Revision: $self->{revision}\n";
+    if (my $url = $self->{revision_url} || $self->{svnweb_url}
+               || $self->{viewcvs_url}
+    ) {
+        printf $out "          $url\n", $self->{revision};
     }
 
-    print $out "\n";
+    # Output the Author any any relevant URL.
+    print $out "Author:   $self->{user}\n";
+    if (my $url = $self->{author_url}) {
+        printf $out "          $url\n", $self->{user};
+    }
+
+    # Output the date and go home.
+    print $out "Date:     $self->{date}\n\n";
     return $self;
 }
 
@@ -1211,15 +1274,26 @@
     my $msg = join "\n", @{$self->{message}};
     print $out "Log Message:\n-----------\n$msg\n";
 
-    # Make SVN::Web links. Mutually exclusive with viewcvs.
-    if (my $url = $self->svnweb_url) {
+    # Make Revision links. Mutually exclusive with svnweb and viewcvs.
+    if (my $url = $self->revision_url) {
+        my $regex = $self->revision_regex
+            or die q{Missing "revision_regex" parameter to accompany }
+            . q{"revsion_url" parameter};
+        if (my @matches = $msg =~ /$regex/ig) {
+            print $out "\nRevision Links:\n --------------\n";
+            printf $out "    $url\n", $_ for @matches;
+        }
+    }
+
+    # Make SVN::Web links. Mutually exclusive with viewcvs and revision.
+    elsif (my $url = $self->svnweb_url) {
         if (my @matches = $msg =~ /\b(?:rev(?:ision)?\s*#?\s*(\d+))\b/ig) {
             print $out "\nSVNWeb Links:\n-------------\n";
             printf $out "    $url\n", $_ for @matches;
         }
     }
 
-    # Make ViewCVS links. Mutually exclusive with svnweb.
+    # Make ViewCVS links. Mutually exclusive with svnweb and revision.
     elsif ($url = $self->viewcvs_url) { # No my; $url is still in scope.
         if (my @matches = $msg =~ /\b(?:rev(?:ision)?\s*#?\s*(\d+))\b/ig) {
             print $out "\nViewCVS Links:\n-------------\n";
@@ -1405,10 +1479,14 @@
 
 sub diff_handle {
     my $self = shift;
+    my @no_diff_args = ();
+    push @no_diff_args, '--no-diff-added' if $self->{no_diff_added};
+    push @no_diff_args, '--no-diff-deleted' if $self->{no_diff_deleted};
     return $self->_pipe(
-        '-|'   => $self->{svnlook},
-        'diff' => $self->{repos_path},
-        '-r'   => $self->{revision}
+        '-|',   $self->{svnlook},
+        'diff', $self->{repos_path},
+        '-r',   $self->{revision},
+        @no_diff_args
     );
 }
 
@@ -1426,6 +1504,16 @@
         my $length = 0;
         while (<$diff>) {
             s/[\n\r]+$//;
+            if (/^(Modified|Added|Deleted|Copied|Property changes on): /) {
+                my $action = $1;
+                if (($action eq "Added" && $self->{no_diff_added}) || ($action eq "Deleted" && $self->{no_diff_deleted})) {
+                    # Dump line.
+                    <$diff>;
+                    
+                    # Don't output anything.
+                    next;
+                }
+            }
             if (($length += length) < $max) {
                 print $out "$_\n";
             }
@@ -1440,6 +1528,16 @@
     else {
         while (<$diff>) {
             s/[\n\r]+$//;
+            if (/^(Modified|Added|Deleted|Copied|Property changes on): /) {
+                my $action = $1;
+                if (($action eq "Added" && $self->{no_diff_added}) || ($action eq "Deleted" && $self->{no_diff_deleted})) {
+                    # Dump line.
+                    <$diff>;
+                    
+                    # Don't output anything.
+                    next;
+                }
+            }
             print $out "$_\n";
         }
     }
@@ -1464,11 +1562,15 @@
     language
     with_diff
     attach_diff
+    no_diff_added
+    no_diff_deleted
     reply_to
     subject_prefix
     subject_cx
     max_sub_length
     max_diff_length
+    author_url
+    revision_url
     viewcvs_url
     svnweb_url
     rt_url
@@ -1609,6 +1711,20 @@
 
 Gets or sets the value of the C<attach_diff> attribute.
 
+=head3 no_diff_added
+
+  my $no_diff_added = $notifier->no_diff_added;
+  $notifier = $notifier->no_diff_added($no_diff_added);
+
+Gets or sets the value of the C<no_diff_added> attribute.
+
+=head3 no_diff_deleted
+
+  my $no_diff_deleted = $notifier->no_diff_deleted;
+  $notifier = $notifier->no_diff_deleted($no_diff_deleted);
+
+Gets or sets the value of the C<no_diff_deleted> attribute.
+
 =head3 reply_to
 
   my $reply_to = $notifier->reply_to;
@@ -1644,13 +1760,28 @@
 
 Gets or set the value of the C<max_diff_length> attribute.
 
+=head3 author_url
+
+  my $author_url = $notifier->author_url;
+  $notifier = $notifier->author_url($author_url);
+
+Gets or sets the value of the C<author_url> attribute.
+
+=head3 revision_url
+
+  my revision_url = $notifier->revision_url;
+  $notifier = $notifier->revision_url($revision_url);
+
+Gets or sets the value of the C<revision_url> attribute. Mutually exclusive
+with C<viewcvs_url> and C<svnweb_url>.
+
 =head3 svnweb_url
 
   my $svnweb_url = $notifier->svnweb_url;
   $notifier = $notifier->svnweb_url($svnweb_url);
 
 Gets or sets the value of the C<svnweb_url> attribute. Mutually exclusive with
-C<viewcvs_url>.
+C<revision_url> and C<viewcvs_url>.
 
 =head3 viewcvs_url
 
@@ -1658,7 +1789,7 @@
   $notifier = $notifier->viewcvs_url($viewcvs_url);
 
 Gets or sets the value of the C<viewcvs_url> attribute. Mutually exclusive
-with C<svnweb_url>.
+with C<revision_url> and C<svnweb_url>.
 
 =head3 verbose
 
Index: lib/SVN/Notify/HTML.pm
===================================================================
--- lib/SVN/Notify/HTML.pm	(revision 2887)
+++ lib/SVN/Notify/HTML.pm	(working copy)
@@ -134,6 +134,17 @@
 To learn more about the power of Regular expressions, I highly recommend
 _Mastering Regular Expressions, Second Edition_, by Jeffrey Friedl.
 
+=item revision_regex
+
+  svnnotify --revision-regex '(Revision-(\d+))'
+
+This attribute is inherited from L<SVN::Notify|SVN::Notify>, but its semantics
+are slightly different: it should return I<two> matches instead of one: the
+text to linkify and the revision number itself. Its semantics are, in fact
+identical to those of C<ticket_regex>, the only difference being that it
+complements and applies to C<revision_url> rather than C<ticket_url> (of
+course). See the L</"ticket_regex"> documentation for details.
+
 =back
 
 =cut
@@ -254,7 +265,9 @@
     print $out "<dl>\n<dt>Revision</dt> <dd>";
 
     my $rev = $self->revision;
-    if (my $url = $self->svnweb_url || $self->viewcvs_url) {
+    if (my $url = $self->revision_url || $self->svnweb_url
+               || $self->viewcvs_url
+    ) {
         $url = encode_entities($url, '<>&"');
         # Make the revision number a URL.
         printf $out qq{<a href="$url">$rev</a>}, $rev;
@@ -263,8 +276,18 @@
         print $out $rev;
     }
 
+    print $out "</dd>\n<dt>Author</dt> <dd>";
+
+    if (my $url = $self->author_url) {
+        $url     = encode_entities($url, '<>&"');
+        my $user = encode_entities($self->user, '<>&"');
+        printf $out qq{<a href="$url">$user</a>}, $user;
+    } else {
+        # Just output the username
+        print $out $self->user;
+    }
+
     print $out "</dd>\n",
-      "<dt>Author</dt> <dd>", encode_entities($self->user, '<>&"'), "</dd>\n",
       "<dt>Date</dt> <dd>", encode_entities($self->date, '<>&"'), "</dd>\n",
       "</dl>\n\n";
 
@@ -384,13 +407,20 @@
         if ($self->with_diff && !$self->attach_diff) {
             for (@{ $files->{$type} }) {
                 my $file = encode_entities($_, '<>&"');
-                if ($file =~ m{/$}) {
-                    # Directories don't link to the diff.
+                if ($file =~ m{/$} && $type ne '_') {
+                    # Directories don't link, unless it's a prop change.
                     print $out qq{<li>$file</li>\n};
                 } else {
-                    # Strip out letters illegal for IDs.
-                    (my $id = $file) =~ s/[^\w_]//g;
-                    print $out qq{<li><a href="#$id">$file</a></li>\n};
+                    if (   ($type eq 'A' && $self->no_added_diff)
+                        || ($type eq 'D' && $self->no_deleted_diff)
+                    ) {
+                        # Skip added and deleted files omitted from diff.
+                        print $out qq{<li>$file</li>\n};
+                    } else {
+                        # Strip out letters illegal for IDs.
+                        (my $id = $file) =~ s/[^\w_]//g;
+                        print $out qq{<li><a href="#$id">$file</a></li>\n};
+                    }
                 }
             }
         } else {
@@ -457,6 +487,13 @@
             && !$seen{$2}++)
         {
             my $action = $1;
+            if (   ($action eq 'Added'   && $self->no_added_diff)
+                || ($action eq 'Deleted' && $self->no_diff_deleted)
+            ) {
+                # Dump a line and skip the rest of the added or deleted diff.
+                <$diff>;
+                next;
+            }
             my $file = encode_entities($2, '<>&"');
             (my $id = $file) =~ s/[^\w_]//g;
             print $out qq{<a id="$id">$action: $file</a>\n};
Index: lib/SVN/Notify/HTML/ColorDiff.pm
===================================================================
--- lib/SVN/Notify/HTML/ColorDiff.pm	(revision 2887)
+++ lib/SVN/Notify/HTML/ColorDiff.pm	(working copy)
@@ -126,6 +126,14 @@
             # Dump line.
             <$diff>;
 
+            if (   ($action eq 'Added'   && $self->no_added_diff)
+                || ($action eq 'Deleted' && $self->no_deleted_diff)
+            ) {
+                # Skip it.
+                ($in_span, $in_div) = '';
+                next;
+            }
+
             # Get the revision numbers.
             my $before = <$diff>;
             $before =~ s/[\n\r]+$//;
Index: Changes
===================================================================
--- Changes	(revision 2887)
+++ Changes	(working copy)
@@ -1,6 +1,9 @@
 Revision history for Perl extension SVN::Notify
 
 2.60
+      - HTML output now creates a link from a directory name to its place in
+        the diff if the type of diff for the directory is a property change.
+        Patch from Lamar Goddard.
 
 2.59  2006-05-11T17:23:12
       - Fixed a few typos, with thanks to Marshall "Eagle Eyes" Roch.
